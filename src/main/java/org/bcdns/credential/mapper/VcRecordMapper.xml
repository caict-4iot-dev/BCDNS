<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.bcdns.credential.mapper.VcRecordMapper">

    <sql id="vcRecordItem">
        id,apply_no applyNo,content,credential_type credentialType,status,vc_id vcId,vc_data vcData,public_key publicKey,user_id userId,create_time createTime,update_time updateTime,is_download isDownload
    </sql>

    <insert id="insert" parameterType="org.bcdns.credential.model.VcRecordDomain">
        insert into
            vc_record(id,apply_no,content,credential_type,status,vc_id,vc_data,public_key,user_id,create_time,update_time,is_download)
        values
            (null,#{applyNo},#{content},#{credentialType},#{status},#{vcId},#{vcData},#{publicKey},#{userId},#{createTime},0,#{isDownload})
    </insert>

    <select id="getVcRecord" parameterType="string" resultType="org.bcdns.credential.model.VcRecordDomain">
        select
        <include refid="vcRecordItem" />
        from
        vc_record
        where
        apply_no=#{applyNo}
    </select>

    <select id="getVcRecord4VcId" parameterType="string" resultType="org.bcdns.credential.model.VcRecordDomain">
        select
        <include refid="vcRecordItem" />
        from
        vc_record
        where
        vc_id=#{vcId}
    </select>

    <select id="getVcRecord4UserId" resultType="org.bcdns.credential.model.VcRecordDomain">
        select
        <include refid="vcRecordItem" />
        from
        vc_record
        where
        user_id=#{userId}
    </select>

    <update id="updateAuditPassStatus" parameterType="org.bcdns.credential.model.VcRecordDomain">
        UPDATE vc_record
        SET status = #{status},
            vc_id = #{vcId},
            vc_data = #{vcData},
            update_time = #{updateTime}
        WHERE apply_no = #{applyNo}
    </update>

    <select id="queryList" parameterType="org.bcdns.credential.dto.req.VcApplyListReqDto" resultType="org.bcdns.credential.model.VcRecordListDomain">
        SELECT vr.apply_no applyNo, vr.vc_id credentialId, vr.status status, vr.user_id userId, vr.create_time createTime,
        vr.credential_type credentialType, vr.update_time auditTime, vr.is_download isDownload
        FROM vc_record vr
        WHERE 1 = 1
        <if test="status != null">
            AND vr.status IN
            <foreach item="status" collection="status" open="(" separator="," close=")">
                #{status}
            </foreach>
        </if>
        ORDER BY vr.create_time DESC
        LIMIT #{startNum}, #{pageSize}
    </select>

    <select id="queryListCount" parameterType="org.bcdns.credential.dto.req.VcApplyListReqDto" resultType="int">
        select COUNT(1)
        from
        vc_record vr
        where 1 = 1
        <if test="status != null">
            AND vr.status IN
            <foreach item="status" collection="status" open="(" separator="," close=")">
                #{status}
            </foreach>
        </if>
    </select>

    <select id="queryDetail" parameterType="org.bcdns.credential.dto.req.VcApplyDetailReqDto" resultType="org.bcdns.credential.model.VcRecordDomain">
        SELECT
        <include refid="vcRecordItem" />
        FROM vc_record
        WHERE 1 = 1
        <if test="applyNo != null and applyNo != ''">
            AND apply_no = #{applyNo}
        </if>
        <if test="credentialId != null and credentialId != ''">
            AND vc_id = #{credentialId}
        </if>
    </select>

    <update id="updateIsDownloadByVcId" parameterType="org.bcdns.credential.model.VcRecordDomain">
        UPDATE vc_record
        SET is_download = #{isDownload},
            update_time = #{updateTime}
        WHERE vc_id = #{vcId}
    </update>

    <update id="updateRevokeStatus" parameterType="org.bcdns.credential.model.VcRecordDomain">
        UPDATE vc_record
        SET status = #{status},
            update_time = #{updateTime}
        WHERE vc_id = #{vcId}
    </update>
</mapper>
